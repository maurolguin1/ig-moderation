-- Crea la tabla de comentarios con un índice de búsqueda de texto completo
create table if not exists public.comments (
  id bigint generated by default as identity primary key,
  comment_id text unique,
  user_id text,
  username text,
  comment_text text,
  profile_url text,
  date timestamptz,
  video_source text,
  etiqueta_agresion text,
  nivel_agresion int,
  color_agresion_hex text,
  polaridad_postura text,
  tipo_acoso text,
  es_ataque boolean,
  notas text,
  created_at timestamptz default now(),
  updated_at timestamptz default now()
);

-- Índices para consultas
create index if not exists comments_username_idx on public.comments(username);
create index if not exists comments_date_idx on public.comments(date);
create index if not exists comments_nivel_idx on public.comments(nivel_agresion);
create index if not exists comments_es_ataque_idx on public.comments(es_ataque);
create index if not exists comments_video_source_idx on public.comments(video_source);

-- Índice de texto completo (tsvector) usando configuración en español
create index if not exists comments_comment_text_tsv_idx on public.comments using gin (to_tsvector('spanish', comment_text));

-- Trigger para actualizar el campo updated_at
create or replace function public.trigger_set_timestamp() returns trigger as $$
begin
  new.updated_at := now();
  return new;
end;
$$ language plpgsql;

drop trigger if exists set_timestamp on public.comments;
create trigger set_timestamp before update on public.comments
for each row execute procedure public.trigger_set_timestamp();